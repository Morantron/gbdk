                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.1.9Fa Sat Jan  8 13:27:23 2000
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module test_stack
                              7 ;--------------------------------------------------------
                              8 ; publics variables in this module
                              9 ;--------------------------------------------------------
                             10 	.globl _main
                             11 	.globl _jaj
                             12 ;--------------------------------------------------------
                             13 ; special function registers
                             14 ;--------------------------------------------------------
                             15 ;--------------------------------------------------------
                             16 ; special function bits 
                             17 ;--------------------------------------------------------
                             18 ;--------------------------------------------------------
                             19 ; internal ram data
                             20 ;--------------------------------------------------------
                             21 	.area	DSEG    (DATA)
                             22 ;--------------------------------------------------------
                             23 ; overlayable items in internal ram 
                             24 ;--------------------------------------------------------
                             25 	.area	OSEG	(OVR,DATA)
                             26 ;--------------------------------------------------------
                             27 ; Stack segment in internal ram 
                             28 ;--------------------------------------------------------
                             29 	.area	SSEG	(DATA)
   0000                      30 __start__stack:
   0000                      31 	.ds	1
                             32 
                             33 ;--------------------------------------------------------
                             34 ; indirectly addressable internal ram data
                             35 ;--------------------------------------------------------
                             36 	.area	ISEG    (DATA)
                             37 ;--------------------------------------------------------
                             38 ; bit data
                             39 ;--------------------------------------------------------
                             40 	.area	BSEG    (BIT)
                             41 ;--------------------------------------------------------
                             42 ; external ram data
                             43 ;--------------------------------------------------------
                             44 	.area	XSEG    (XDATA)
                             45 ;--------------------------------------------------------
                             46 ; interrupt vector 
                             47 ;--------------------------------------------------------
                             48 	.area	CODE (CODE)
   0000                      49 __interrupt_vect:
   0000 02s00r00             50 	ljmp	__sdcc_gsinit_startup
   0003 32                   51 	reti
   0004                      52 	.ds	7
   000B 32                   53 	reti
   000C                      54 	.ds	7
   0013 32                   55 	reti
   0014                      56 	.ds	7
   001B 32                   57 	reti
   001C                      58 	.ds	7
   0023 32                   59 	reti
   0024                      60 	.ds	7
   002B 32                   61 	reti
   002C                      62 	.ds	7
                             63 ;--------------------------------------------------------
                             64 ; global & static initialisations
                             65 ;--------------------------------------------------------
                             66 	.area GSINIT (CODE)
   0000                      67 __sdcc_gsinit_startup:
   0000 75 81 07             68 	mov	sp,#7
   0003 12s00r00             69 	lcall	__sdcc_external_startup
   0006 E5 82                70 	mov	a,dpl
   0008 60 03                71 	jz	__sdcc_init_data
   000A 02s00r00             72 	ljmp	__sdcc_program_startup
   000D                      73 __sdcc_init_data:
                             74 ;--------------------------------------------------------
                             75 ; code
                             76 ;--------------------------------------------------------
                             77 	.area CSEG (CODE)
   0000                      78 __sdcc_program_startup:
   0000 12s00r0A             79 	lcall	_main
                             80 ;	return from main will lock up
   0003 02s00r03             81 	ljmp  .
                    0006     82 	G$jaj$0$0 ==.
                    0006     83 	C$test_stack.c$1$0$0 ==.
                             84 ;  test_stack.c 1
                             85 ;  -----------------------------------------
                             86 ;   function jaj
                             87 ;  -----------------------------------------
   0006                      88 _jaj:
                    0002     89 	ar2 = 0x02
                    0003     90 	ar3 = 0x03
                    0004     91 	ar4 = 0x04
                    0005     92 	ar5 = 0x05
                    0006     93 	ar6 = 0x06
                    0007     94 	ar7 = 0x07
                    0000     95 	ar0 = 0x00
                    0001     96 	ar1 = 0x01
                    0006     97 	C$test_stack.c$3$1$1 ==.
                             98 ;  test_stack.c 3
   0006 12s00r06             99 	lcall  _jaj
   0009                     100 00101$:
                    0009    101 	C$test_stack.c$4$1$1 ==.
                    0009    102 	XG$jaj$0$0 ==.
   0009 22                  103 	ret  
                    000A    104 	G$main$0$0 ==.
                    000A    105 	C$test_stack.c$6$1$1 ==.
                            106 ;  test_stack.c 6
                            107 ;  -----------------------------------------
                            108 ;   function main
                            109 ;  -----------------------------------------
   000A                     110 _main:
                    000A    111 	C$test_stack.c$8$1$1 ==.
                            112 ;  test_stack.c 8
   000A 12s00r06            113 	lcall  _jaj
   000D                     114 00101$:
                    000D    115 	C$test_stack.c$9$1$1 ==.
                    000D    116 	XG$main$0$0 ==.
   000D 22                  117 	ret  
                            118 	.area	CSEG    (CODE)
